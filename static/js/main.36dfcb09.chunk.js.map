{"version":3,"sources":["asset/logo.JPG","login.js","home.js","signup.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","login","props","account","this","location","state","className","src","require","to","React","Component","home","accountChange","event","setState","target","value","passwordChange","password","checkLoginAlert","length","swal","fire","checkLogin","style","marginTop","onClick","pathname","display","type","placeholder","onChange","signup","App","exact","path","component","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"6GAAAA,EAAOC,QAAU,IAA0B,kC,wLCuB5BC,G,kBAlBX,WAAYC,GAAQ,qEACVA,I,sEAEF,IACAC,EAAYC,KAAKF,MAAMG,SAASC,MAAhCH,QACR,OACI,yBAAKI,UAAU,OACd,4BAAQA,UAAU,cACf,yBAAKC,IAAKC,EAAQ,MAClB,2BAAOF,UAAU,aAAjB,YACA,0CAAgBJ,GAChB,kBAAC,IAAD,CAAMO,GAAG,KAAI,uD,GAZLC,IAAMC,Y,iBC0DXC,E,YAxDb,WAAYX,GAAQ,IAAD,8BACjB,4CAAMA,KAIRY,cAAgB,SAACC,GACf,EAAKC,SAAS,CAACb,QAASY,EAAME,OAAOC,SANpB,EASnBC,eAAiB,SAACJ,GAChB,EAAKC,SAAS,CAACI,SAAUL,EAAME,OAAOC,SAVrB,EAanBG,gBAAkB,WAAO,IAAD,EACM,EAAKf,MAA1BH,EADe,EACfA,QAASiB,EADM,EACNA,SACM,IAAnBjB,EAAQmB,QAAoC,IAApBF,EAASE,QAChCC,IAAKC,KAAK,yCAhBG,EAoBnBC,WAAa,WAAM,IAAD,EACY,EAAKnB,MAA1BH,EADS,EACTA,QAASiB,EADA,EACAA,SAChB,OAAsB,IAAnBjB,EAAQmB,QAAoC,IAApBF,EAASE,OACzB,kBAAC,IAAD,CAAMZ,GAAG,KAAI,4BAAQgB,MAAO,CAACC,UAAU,QAASC,QAAS,EAAKP,iBAAjD,UAEb,kBAAC,IAAD,CAAMX,GAAI,CACbmB,SAAU,SACVvB,MAAO,CACHH,QAASA,KAEZ,4BAAQuB,MAAO,CAACC,UAAU,QAASC,QAAS,EAAKP,iBAAjD,WA5BT,EAAKf,MAAQ,CAACH,QAAQ,GAAGiB,SAAS,IAFjB,E,sEAkCT,IAAD,EACqBhB,KAAKE,MAA1BH,EADA,EACAA,QAASiB,EADT,EACSA,SAChB,OACI,yBAAKb,UAAU,OACd,4BAAQA,UAAU,cACf,yBAAKC,IAAKC,EAAQ,MAClB,2BAAOF,UAAU,aAAjB,YACA,yBAAKmB,MAAO,CAACI,QAAQ,WACjB,2BAAOC,KAAK,OAAOC,YAAY,UAAUd,MAAOf,EAAS8B,SAAU7B,KAAKU,iBAE5E,yBAAKY,MAAO,CAACI,QAAQ,WACjB,2BAAOC,KAAK,OAAOC,YAAY,WAAWd,MAAOE,EAAUa,SAAU7B,KAAKe,kBAE7Ef,KAAKqB,aACN,kBAAC,IAAD,CAAMf,GAAG,WAAU,4BAAQgB,MAAO,CAACC,UAAU,QAA1B,kB,GAjDZhB,IAAMC,WCeVsB,E,iLAbX,OACI,yBAAK3B,UAAU,OACd,4BAAQA,UAAU,cACf,yBAAKC,IAAKC,EAAQ,MAClB,sCACE,kBAAC,IAAD,CAAMC,GAAG,KAAI,uD,GARNC,IAAMC,W,QCkBZuB,E,iLAbX,OACE,kBAAC,IAAD,KACE,yBAAK5B,UAAU,OACb,kBAAC,IAAD,CAAO6B,OAAK,EAACC,KAAK,IAAIC,UAAWzB,IACjC,kBAAC,IAAD,CAAOuB,OAAK,EAACC,KAAK,SAASC,UAAWrC,IACtC,kBAAC,IAAD,CAAOmC,OAAK,EAACC,KAAK,UAAUC,UAAWJ,U,GAP/BvB,IAAMC,WCKJ2B,QACW,cAA7BC,OAAOnC,SAASoC,UAEe,UAA7BD,OAAOnC,SAASoC,UAEhBD,OAAOnC,SAASoC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.36dfcb09.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.18fad0a3.JPG\";","import React from 'react';\r\nimport {Link} from \"react-router-dom\";\r\nimport './App.css';\r\n\r\nclass login extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n      }\r\n  render() {\r\n    const { account } = this.props.location.state;\r\n    return (\r\n        <div className=\"App\" >\r\n         <header className=\"App-header\">\r\n            <img src={require('./asset/logo.JPG')}></img>\r\n            <label className=\"logoTitle\">FengChat</label>\r\n            <label>welcome {account}</label>\r\n            <Link to=\"/\"><button>back to home</button></Link>\r\n          </header>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default login;\r\n","import React from 'react';\r\nimport swal from 'sweetalert2';\r\nimport {Link} from \"react-router-dom\";\r\nimport './App.css';\r\n\r\nclass home extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {account:'',password:''};\r\n  }\r\n\r\n  accountChange = (event) =>  {\r\n    this.setState({account: event.target.value});\r\n  }\r\n\r\n  passwordChange = (event) =>  {\r\n    this.setState({password: event.target.value});\r\n  }\r\n\r\n  checkLoginAlert = () => {\r\n    const {account, password} = this.state;\r\n    if(account.length === 0 || password.length === 0){\r\n        swal.fire(\"please enter the password or account\")\r\n    }\r\n  }\r\n\r\n  checkLogin = () =>{\r\n    const {account, password} = this.state;\r\n    if(account.length === 0 || password.length === 0){\r\n        return <Link to=\"/\"><button style={{marginTop:'15px'}} onClick={this.checkLoginAlert}>login</button></Link>;\r\n    }else{\r\n        return <Link to={{\r\n            pathname: '/login',\r\n            state: {\r\n                account: account\r\n            }\r\n          }}><button style={{marginTop:'15px'}} onClick={this.checkLoginAlert}>login</button></Link>;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {account, password} = this.state;\r\n    return (\r\n        <div className=\"App\">\r\n         <header className=\"App-header\">\r\n            <img src={require('./asset/logo.JPG')}></img>\r\n            <label className=\"logoTitle\">FengChat</label>\r\n            <div style={{display:'inline'}}>\r\n                <input type=\"text\" placeholder=\"account\" value={account} onChange={this.accountChange}/>\r\n            </div>\r\n            <div style={{display:'inline'}}>\r\n                <input type=\"text\" placeholder=\"password\" value={password} onChange={this.passwordChange}/>\r\n            </div>\r\n            {this.checkLogin()}\r\n            <Link to=\"/signup\"><button style={{marginTop:'5px'}}>Sign up</button></Link>\r\n          </header>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default home;","import React from 'react';\r\nimport {BrowserRouter, Route, Link} from \"react-router-dom\";\r\nimport './App.css';\r\n\r\nclass signup extends React.Component {\r\n\r\n  render() {\r\n    return (\r\n        <div className=\"App\">\r\n         <header className=\"App-header\" >\r\n            <img src={require('./asset/logo.JPG')}></img>\r\n            <p>sign up</p>\r\n              <Link to=\"/\"><button>back to home</button></Link>\r\n          </header>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default signup;","import React from 'react';\nimport login from './login';\nimport home from './home';\nimport signup from './signup';\nimport {BrowserRouter, Route, Link} from \"react-router-dom\";\nimport './App.css';\n\nclass App extends React.Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <Route exact path=\"/\" component={home} />  \n          <Route exact path=\"/login\" component={login} /> \n          <Route exact path=\"/signup\" component={signup} /> \n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}